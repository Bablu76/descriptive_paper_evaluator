Introduction to Programming

Chapter 1: Fundamentals
Programming is the process of creating instructions for a computer to execute. A program is written in a programming language, such as Python, which is both human-readable and machine-executable.

1.1 Variables
A variable is a named storage location in memory used to hold data. Variables have a type (e.g., integer, string) and a scope, which determines where they can be accessed.
- Local Scope: Variables defined inside a function are local and only accessible within that function.
- Global Scope: Variables defined outside functions are global and accessible throughout the program.

Example:
global_var = 10  # Global variable
def my_function():
    local_var = 5  # Local variable
    print(local_var, global_var)
my_function()

1.2 Object-Oriented Programming
Object-Oriented Programming (OOP) is a paradigm that organizes code into objects, which are instances of classes. Key principles include:
- Encapsulation: Bundling data and methods that operate on that data.
- Inheritance: Allowing a class to inherit attributes and methods from another class.
- Polymorphism: Enabling objects to be treated as instances of their parent class.

Chapter 2: Functions
Functions are reusable blocks of code that perform a specific task. They can take inputs (parameters) and return outputs.

2.1 Factorial Function
A factorial of a number n (denoted n!) is the product of all positive integers less than or equal to n. For example, 5! = 5 * 4 * 3 * 2 * 1 = 120.

Example (Recursive):
def factorial(n):
    if n == 0:
        return 1
    return n * factorial(n - 1)